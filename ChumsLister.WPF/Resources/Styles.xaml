<ResourceDictionary 
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:converters="clr-namespace:ChumsLister.WPF.Converters">

    <!-- Converters -->
    <converters:BoolToColorConverter x:Key="BoolToColorConverter"/>

    <!-- Colors -->
    <Color x:Key="PrimaryColor">#4A4A4A</Color>
    <Color x:Key="SecondaryColor">#FF5722</Color>
    <Color x:Key="BackgroundLight">#f8f9fa</Color>
    <Color x:Key="TextDark">#212121</Color>
    <Color x:Key="TextMedium">#757575</Color>
    <Color x:Key="BorderColor">#e0e0e0</Color>
    <Color x:Key="SuccessGreen">#4CAF50</Color>
    <Color x:Key="WarningOrange">#FFC107</Color>
    <Color x:Key="DangerRed">#F44336</Color>

    <!-- Brushes -->
    <SolidColorBrush x:Key="PrimaryBrush" Color="{StaticResource PrimaryColor}"/>
    <SolidColorBrush x:Key="SecondaryBrush" Color="{StaticResource SecondaryColor}"/>
    <SolidColorBrush x:Key="BackgroundLightBrush" Color="{StaticResource BackgroundLight}"/>
    <SolidColorBrush x:Key="TextDarkBrush" Color="{StaticResource TextDark}"/>
    <SolidColorBrush x:Key="TextMediumBrush" Color="{StaticResource TextMedium}"/>
    <SolidColorBrush x:Key="AppBorderBrush" Color="{StaticResource BorderColor}"/>
    <SolidColorBrush x:Key="SuccessGreenBrush" Color="{StaticResource SuccessGreen}"/>
    <SolidColorBrush x:Key="WarningOrangeBrush" Color="{StaticResource WarningOrange}"/>
    <SolidColorBrush x:Key="DangerRedBrush" Color="{StaticResource DangerRed}"/>

    <!-- App-specific brushes -->
    <SolidColorBrush x:Key="LightTextBrush" Color="{StaticResource TextMedium}"/>
    <SolidColorBrush x:Key="BackgroundBrush" Color="{StaticResource BackgroundLight}"/>
    <SolidColorBrush x:Key="TextBrush" Color="{StaticResource TextDark}"/>
    <SolidColorBrush x:Key="BorderBrush" Color="{StaticResource BorderColor}"/>
    <SolidColorBrush x:Key="AccentBrush" Color="{StaticResource SecondaryColor}"/>
    <SolidColorBrush x:Key="WhiteBrush" Color="White"/>
    <SolidColorBrush x:Key="LightBorderBrush" Color="#CCCCCC"/>
    <SolidColorBrush x:Key="LightBlueBrush" Color="#1976D2"/>
    <SolidColorBrush x:Key="LightGrayBrush" Color="#F5F5F5"/>
    <SolidColorBrush x:Key="LightBlueHighlightBrush" Color="#E3F2FD"/>
    <SolidColorBrush x:Key="DarkGrayHoverBrush" Color="#333333"/>

    <!-- ScrollViewer Style -->
    <Style x:Key="ScrollViewerStyle" TargetType="ScrollViewer">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ScrollViewer">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <ScrollContentPresenter Grid.Column="0" Grid.Row="0"/>

                        <ScrollBar x:Name="PART_VerticalScrollBar"
                                Grid.Column="1"
                                Grid.Row="0"
                                Value="{TemplateBinding VerticalOffset}"
                                Maximum="{TemplateBinding ScrollableHeight}"
                                ViewportSize="{TemplateBinding ViewportHeight}"
                                Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>

                        <ScrollBar x:Name="PART_HorizontalScrollBar"
                                Orientation="Horizontal"
                                Grid.Column="0"
                                Grid.Row="1"
                                Value="{TemplateBinding HorizontalOffset}"
                                Maximum="{TemplateBinding ScrollableWidth}"
                                ViewportSize="{TemplateBinding ViewportWidth}"
                                Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Navigation Button Style -->
    <Style x:Key="NavButtonStyle" TargetType="ToggleButton">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Padding" Value="20,10" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Margin" Value="0,2" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="border" 
                           Background="{TemplateBinding Background}" 
                           BorderBrush="{TemplateBinding BorderBrush}" 
                           BorderThickness="{TemplateBinding BorderThickness}" 
                           CornerRadius="4">
                        <ContentPresenter Margin="{TemplateBinding Padding}" 
                                         HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                         VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                         TextElement.Foreground="{TemplateBinding Foreground}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" Value="#555555" />
                            <Setter Property="Foreground" Value="White" />
                            <Setter Property="FontWeight" Value="SemiBold" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#f8f9fa" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Sidebar Button Style - Specialized for the sidebar navigation buttons -->
    <Style x:Key="SidebarButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Padding" Value="15,12" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Margin="{TemplateBinding Padding}"
                                          TextElement.Foreground="White" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#555555" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="#444444" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Card Style -->
    <Style x:Key="CardStyle" TargetType="Border">
        <Setter Property="Background" Value="White" />
        <Setter Property="BorderBrush" Value="{StaticResource AppBorderBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="CornerRadius" Value="8" />
        <Setter Property="Padding" Value="15" />
        <Setter Property="Margin" Value="0,0,0,20" />
    </Style>

    <!-- Text Styles -->
    <Style x:Key="TextBlockStyle" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="Foreground" Value="{StaticResource TextDarkBrush}" />
    </Style>

    <Style x:Key="TitleStyle" TargetType="TextBlock" BasedOn="{StaticResource TextBlockStyle}">
        <Setter Property="FontSize" Value="24" />
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="Margin" Value="0,0,0,20" />
        <Setter Property="Foreground" Value="{StaticResource TextBrush}" />
    </Style>

    <Style x:Key="SubtitleStyle" TargetType="TextBlock" BasedOn="{StaticResource TextBlockStyle}">
        <Setter Property="FontSize" Value="16" />
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="Margin" Value="0,0,0,15" />
        <Setter Property="Foreground" Value="{StaticResource TextBrush}" />
    </Style>

    <!-- Label Style -->
    <Style x:Key="LabelStyle" TargetType="Label">
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="Foreground" Value="{StaticResource TextDarkBrush}" />
    </Style>

    <!-- ComboBox Styles -->
    <Style x:Key="ComboBoxStyle" TargetType="ComboBox">
        <Setter Property="Background" Value="White" />
        <Setter Property="Foreground" Value="{StaticResource TextDarkBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}" />
    </Style>

    <Style x:Key="ComboBoxItemStyle" TargetType="ComboBoxItem">
        <Setter Property="Foreground" Value="{StaticResource TextDarkBrush}" />
    </Style>

    <!-- ListBox Styles -->
    <Style x:Key="ListBoxStyle" TargetType="ListBox">
        <Setter Property="Background" Value="White" />
        <Setter Property="Foreground" Value="{StaticResource TextDarkBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}" />
    </Style>

    <Style x:Key="ListBoxItemStyle" TargetType="ListBoxItem">
        <Setter Property="Foreground" Value="{StaticResource TextDarkBrush}" />
    </Style>

    <!-- Button Styles -->
    <Style x:Key="ButtonBaseStyle" TargetType="Button">
        <Setter Property="Padding" Value="15,8" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="20">
                        <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          Margin="{TemplateBinding Padding}"
                                          TextElement.Foreground="White" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource AccentBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="#333333" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="PrimaryButtonStyle" TargetType="Button" BasedOn="{StaticResource ButtonBaseStyle}">
        <Setter Property="Background" Value="{StaticResource PrimaryBrush}" />
        <Setter Property="Foreground" Value="White" />
    </Style>

    <Style x:Key="AccentButtonStyle" TargetType="Button" BasedOn="{StaticResource ButtonBaseStyle}">
        <Setter Property="Background" Value="{StaticResource AccentBrush}" />
        <Setter Property="Foreground" Value="White" />
    </Style>

    <Style x:Key="OutlineButtonStyle" TargetType="Button" BasedOn="{StaticResource ButtonBaseStyle}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="{StaticResource PrimaryBrush}" />
        <Setter Property="Foreground" Value="{StaticResource PrimaryBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                            CornerRadius="20"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        Margin="{TemplateBinding Padding}"
                                        TextElement.Foreground="{TemplateBinding Foreground}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#20000000" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="#40000000" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Custom Gruffin Style Button -->
    <Style x:Key="GruffinButtonStyle" TargetType="Button" BasedOn="{StaticResource ButtonBaseStyle}">
        <Setter Property="Background" Value="{StaticResource PrimaryBrush}" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                        CornerRadius="20"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter HorizontalAlignment="Center"
                                      VerticalAlignment="Center"
                                      Margin="{TemplateBinding Padding}"
                                      TextElement.Foreground="White" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource AccentBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="#333333" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- DataGrid Styles -->
    <Style x:Key="DataGridStyle" TargetType="DataGrid">
        <Setter Property="Background" Value="White" />
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="RowBackground" Value="White" />
        <Setter Property="AlternatingRowBackground" Value="#F5F5F5" />
        <Setter Property="HorizontalGridLinesBrush" Value="{StaticResource BorderBrush}" />
        <Setter Property="VerticalGridLinesBrush" Value="{StaticResource BorderBrush}" />
    </Style>

    <Style x:Key="DataGridColumnHeaderStyle" TargetType="DataGridColumnHeader">
        <Setter Property="Background" Value="{StaticResource PrimaryBrush}" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="Height" Value="30" />
        <Setter Property="Padding" Value="5,0" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}" />
    </Style>

    <Style x:Key="DataGridCellStyle" TargetType="DataGridCell">
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}" />
        <Setter Property="Padding" Value="5,2" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Border BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="True">
                        <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding STATUS}" Value="sold">
                <Setter Property="Background" Value="#FFFFCC" />
            </DataTrigger>
            <DataTrigger Binding="{Binding STATUS}" Value="repo">
                <Setter Property="Background" Value="#FFFFCC" />
            </DataTrigger>
            <DataTrigger Binding="{Binding STATUS}" Value="ebay">
                <Setter Property="Background" Value="#FFFFCC" />
            </DataTrigger>
            <DataTrigger Binding="{Binding STATUS}" Value="listed">
                <Setter Property="Background" Value="#CCFFCC" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!-- CheckBox Style -->
    <Style x:Key="CheckBoxStyle" TargetType="CheckBox">
        <Setter Property="Foreground" Value="{StaticResource TextDarkBrush}" />
    </Style>

    <!-- TabControl Styles -->
    <Style x:Key="TabControlStyle" TargetType="TabControl">
        <Setter Property="Background" Value="White" />
    </Style>

    <Style x:Key="TabItemStyle" TargetType="TabItem">
        <Setter Property="Foreground" Value="{StaticResource TextDarkBrush}" />
        <Setter Property="Background" Value="{StaticResource BackgroundLightBrush}" />
    </Style>

    <!-- Frame Style -->
    <Style x:Key="FrameStyle" TargetType="Frame">
        <Setter Property="Background" Value="{StaticResource BackgroundLightBrush}" />
    </Style>

    <!-- TextBox Style -->
    <Style x:Key="TextBoxStyle" TargetType="TextBox">
        <Setter Property="Background" Value="White" />
        <Setter Property="Foreground" Value="{StaticResource TextDarkBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}" />
        <Setter Property="Padding" Value="5,3" />
    </Style>
</ResourceDictionary>